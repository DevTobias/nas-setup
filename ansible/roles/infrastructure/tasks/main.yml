- name: Deploy docker infrastructure
  docker_compose:
    project_name: infrastructure
    remove_orphans: true
    definition:
      version: "3"
      services:
        watchtower:
          image: containrrr/watchtower:latest
          container_name: infrastructure_watchtower
          restart: unless-stopped
          environment:
            WATCHTOWER_SCHEDULE: "0 0 * * * *"
            WATCHTOWER_CLEANUP: "true"
            TZ: "{{ timezone }}"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
          networks:
            - default

        traefik:
          image: traefik:latest
          container_name: infrastructure_traefik
          restart: unless-stopped
          ports:
            - 80:80/tcp
            - 443:443/tcp
          volumes:
            - "{{ docker_path }}/traefik:/etc/traefik"
            - "{{ docker_path }}/traefik/certificates:/certs"
            - /var/run/docker.sock:/var/run/docker.sock:ro
          networks:
            - default
          healthcheck:
            test: ["CMD", "traefik", "healthcheck"]
          labels:
            # General configuration
            traefik.enable: true
            # Http configuration
            traefik.http.routers.traefik-http.entrypoints: web
            traefik.http.routers.traefik-http.rule: Host(`{{ traefik_host }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
            traefik.http.routers.traefik-http.middlewares: traefik-https
            traefik.http.middlewares.traefik-https.redirectscheme.scheme: https
            # Https configuration
            traefik.http.routers.traefik.entrypoints: websecure
            traefik.http.routers.traefik.rule: Host(`{{ traefik_host }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
            traefik.http.routers.traefik.service: api@internal
            traefik.http.routers.traefik.tls: true

        wireguard:
          image: weejewel/wg-easy
          container_name: infrastructure_wireguard
          restart: unless-stopped
          environment:
            WG_HOST: "{{ wireguard_host }}"
            PASSWORD: "{{ wireguard_password }}"
          volumes:
            - "{{ docker_path }}/wireguard:/etc/wireguard"
          ports:
            - "51820:51820/udp"
          cap_add:
            - NET_ADMIN
            - SYS_MODULE
          sysctls:
            - net.ipv4.ip_forward=1
            - net.ipv4.conf.all.src_valid_mark=1
          networks:
            - default
          labels:
            # General configuration
            traefik.enable: true
            # Http configuration
            traefik.http.routers.wireguard-http.entrypoints: web
            traefik.http.routers.wireguard-http.rule: Host(`{{ wireguard_host }}`)
            traefik.http.routers.wireguard-http.middlewares: wireguard-https
            traefik.http.middlewares.wireguard-https.redirectscheme.scheme: https
            # Https configuration
            traefik.http.routers.wireguard.entrypoints: websecure
            traefik.http.routers.wireguard.rule: Host(`{{ wireguard_host }}`)
            traefik.http.routers.wireguard.service: wireguard-https-service
            traefik.http.services.wireguard-https-service.loadbalancer.server.port: 51821
            traefik.http.routers.wireguard.tls: true

      networks:
        default:
          driver: bridge
